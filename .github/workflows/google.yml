name: Build and Deploy to Cloud Run

on:
  push:
    branches:
    - master

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  RUN_REGION: us-central1
  SERVICE_NAME: ironman

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy to Google App Engine
    runs-on: ubuntu-latest

    steps:
    #Checkout the repository code
    - name: Checkout
      uses: actions/checkout@v2
    
    #Cache the maven dependencies to .m2 directory
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    #Set the java-version to use
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    # Build the jar file with maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      
    # Setup gcloud CLI
    - name: Setup gcloud CLI
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
      with:
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        project_id: ${{ secrets.PROJECT_ID }}
        export_default_credentials: true 
         
    # Pull previously pushed stages(if any), Build the Docker image using cache and push it to registry
    - uses: whoan/docker-build-with-cache-action@v5
      with:
        username: _json_key
        password: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        registry: gcr.io
        image_name: ironman  

# Deploy image to Cloud Run
    - name: Deploy
      run: |-
        gcloud run deploy "$SERVICE_NAME" \
          --quiet \
          --region "$RUN_REGION" \
          --image "gcr.io/$PROJECT_ID/ironman:latest" \
          --platform "managed" \
          --allow-unauthenticated
